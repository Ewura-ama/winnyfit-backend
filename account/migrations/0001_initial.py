# Generated by Django 5.2.4 on 2025-08-05 16:07

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(blank=True, choices=[('personal-training', 'Personal Training'), ('group-fitness', 'Group Fitness'), ('strength-conditioning', 'Strength and Conditioning'), ('weight-loss-coaching', 'Weight Loss Coaching'), ('rehabilitation-training', 'Rehabilitation Training')], max_length=50)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('contact_number', models.CharField(max_length=20, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('available', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], default='yes', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Trainer',
                'verbose_name_plural': 'Trainers',
                'db_table': 'trainer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrainerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(upload_to='avatars/')),
                ('instagram', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('trainer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='account.trainer')),
            ],
            options={
                'db_table': 'trainer_profile',
            },
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('firstname', models.CharField(default='', max_length=255)),
                ('lastname', models.CharField(default='', max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('trainer', 'Trainer'), ('customer', 'Customer'), ('administrative', 'Administrative')], default='patient', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='useraccount_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='useraccount_set', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='trainer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to='account.useraccount'),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_number', models.CharField(db_column='contactnumber', max_length=20, unique=True)),
                ('reg_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_profile', to='account.useraccount')),
            ],
            options={
                'db_table': 'customers',
                'managed': True,
            },
        ),
        migrations.AddIndex(
            model_name='trainer',
            index=models.Index(fields=['contact_number'], name='trainer_contact_dd4bda_idx'),
        ),
        migrations.AddIndex(
            model_name='trainer',
            index=models.Index(fields=['user'], name='trainer_user_id_d6e450_idx'),
        ),
    ]
